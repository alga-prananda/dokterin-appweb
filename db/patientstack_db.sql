-- MySQL Script generated by MySQL Workbench
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

DROP DATABASE IF EXISTS patientstack_db;
CREATE DATABASE patientstack_db;
USE patientstack_db;

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';


-- -----------------------------------------------------
-- Table `patientstack_db`.`visits`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `patientstack_db`.`visits` (
  `doctor_id` INT NOT NULL,
  `date` DATETIME NOT NULL,
  `note` LONGTEXT NOT NULL,
  `patient_id` VARCHAR(45) NOT NULL,
  `reason_for_visit` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`patient_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `patientstack_db`.`patientss`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `patientstack_db`.`patients` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `first_name` VARCHAR(45) NOT NULL,
  `last_name` VARCHAR(45) NOT NULL,
  `dob` DATE NOT NULL,
  `street_address` VARCHAR(45) NOT NULL COMMENT '	',
  `city` VARCHAR(45) NOT NULL,
  `state` VARCHAR(2) NOT NULL,
  `zip` INT(5) NOT NULL,
  `telephone` INT(10) NOT NULL,
  `height` VARCHAR(45) NOT NULL,
  `weight` VARCHAR(45) NOT NULL,
  `allergies` VARCHAR(45) NULL,
  `procedures` VARCHAR(45) NULL,
  `type` VARCHAR(45) NULL,
  `emergency_contact_name` VARCHAR(45) NULL,
  `emergency_contact_number` INT(10) NULL,
  `provider_name` VARCHAR(45) NULL,
  `policy_number` VARCHAR(45) NULL,
  `appointments` VARCHAR(45) NULL,
  `image` VARCHAR(255) NULL,
  `visits_patient_id` VARCHAR(45) NOT NULL,
  INDEX `fk_patients_visits1_idx` (`visits_patient_id` ASC),
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_patients_visits1`
    FOREIGN KEY (`visits_patient_id`)
    REFERENCES `patientstack_db`.`visits` (`patient_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `patientstack_db`.`allergies`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `patientstack_db`.`allergies` (
  `patient_id` INT NOT NULL,
  `allergy` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`patient_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `patientstack_db`.`patients_has_allergies`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `patientstack_db`.`patients_has_allergies` (
  `patients_id` INT NOT NULL,
  `allergies_patient_id` INT NOT NULL,
  PRIMARY KEY (`patients_id`, `allergies_patient_id`),
  INDEX `fk_patients_has_allergies_allergies1_idx` (`allergies_patient_id` ASC),
  INDEX `fk_patients_has_allergies_patients_idx` (`patients_id` ASC),
  CONSTRAINT `fk_patients_has_allergies_patients`
    FOREIGN KEY (`patients_id`)
    REFERENCES `patientstack_db`.`patients` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_patients_has_allergies_allergies1`
    FOREIGN KEY (`allergies_patient_id`)
    REFERENCES `patientstack_db`.`allergies` (`patient_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `patientstack_db`.`prescriptions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `patientstack_db`.`prescriptions` (
  `name` VARCHAR(100) NOT NULL,
  `patient_id` INT NULL,
  PRIMARY KEY (`name`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `patientstack_db`.`patients_has_prescriptions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `patientstack_db`.`patients_has_prescriptions` (
  `patients_id` INT NOT NULL,
  `prescriptions_name` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`patients_id`, `prescriptions_name`),
  INDEX `fk_patients_has_prescriptions_prescriptions1_idx` (`prescriptions_name` ASC),
  INDEX `fk_patients_has_prescriptions_patients1_idx` (`patients_id` ASC),
  CONSTRAINT `fk_patients_has_prescriptions_patients1`
    FOREIGN KEY (`patients_id`)
    REFERENCES `patientstack_db`.`patients` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_patients_has_prescriptions_prescriptions1`
    FOREIGN KEY (`prescriptions_name`)
    REFERENCES `patientstack_db`.`prescriptions` (`name`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `patientstack_db`.`lab_results`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `patientstack_db`.`lab_results` (
  `idlab_results` INT NOT NULL,
  `type` VARCHAR(45) NOT NULL,
  `result` VARCHAR(45) NOT NULL,
  `test_date` DATE NOT NULL,
  `lab_resultscol` VARCHAR(45) NOT NULL,
  `patient_id` INT NOT NULL,
  PRIMARY KEY (`idlab_results`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `patientstack_db`.`patients_has_lab_results`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `patientstack_db`.`patients_has_lab_results` (
  `patients_id` INT NOT NULL,
  `lab_results_idlab_results` INT NOT NULL,
  PRIMARY KEY (`patients_id`, `lab_results_idlab_results`),
  INDEX `fk_patients_has_lab_results_lab_results1_idx` (`lab_results_idlab_results` ASC),
  INDEX `fk_patients_has_lab_results_patients1_idx` (`patients_id` ASC),
  CONSTRAINT `fk_patients_has_lab_results_patients1`
    FOREIGN KEY (`patients_id`)
    REFERENCES `patientstack_db`.`patients` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_patients_has_lab_results_lab_results1`
    FOREIGN KEY (`lab_results_idlab_results`)
    REFERENCES `patientstack_db`.`lab_results` (`idlab_results`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `patientstack_db`.`doctors`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `patientstack_db`.`doctors` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `first_name` VARCHAR(45) NOT NULL,
  `last_name` VARCHAR(45) NOT NULL,
  `telephone` INT(10) NOT NULL,
  `appointments` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `patientstack_db`.`doctors_has_patients`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `patientstack_db`.`doctors_has_patients` (
  `doctors_id` INT NOT NULL,
  `patients_id` INT NOT NULL,
  PRIMARY KEY (`doctors_id`, `patients_id`),
  INDEX `fk_doctors_has_patients_patients1_idx` (`patients_id` ASC),
  INDEX `fk_doctors_has_patients_doctors1_idx` (`doctors_id` ASC),
  CONSTRAINT `fk_doctors_has_patients_doctors1`
    FOREIGN KEY (`doctors_id`)
    REFERENCES `patientstack_db`.`doctors` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_doctors_has_patients_patients1`
    FOREIGN KEY (`patients_id`)
    REFERENCES `patientstack_db`.`patients` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `patientstack_db`.`appointments`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `patientstack_db`.`appointments` (
  `physician_id` INT NOT NULL,
  `patient_id` INT NOT NULL,
  `time` DATETIME NOT NULL,
  `location` VARCHAR(45) NOT NULL,
  `patients_id` INT NOT NULL,
  PRIMARY KEY (`physician_id`, `patients_id`),
  INDEX `fk_appointments_patients_idx` (`patients_id` ASC),
  CONSTRAINT `fk_appointments_patients`
    FOREIGN KEY (`patients_id`)
    REFERENCES `patientstack_db`.`patients` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `patientstack_db`.`doctors_has_appointments`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `patientstack_db`.`doctors_has_appointments` (
  `doctors_id` INT NOT NULL,
  `appointments_physician_id` INT NOT NULL,
  `appointments_patients_id` INT NOT NULL,
  PRIMARY KEY (`doctors_id`, `appointments_physician_id`, `appointments_patients_id`),
  INDEX `fk_doctors_has_appointments_appointments1_idx` (`appointments_physician_id` ASC, `appointments_patients_id` ASC),
  INDEX `fk_doctors_has_appointments_doctors1_idx` (`doctors_id` ASC),
  CONSTRAINT `fk_doctors_has_appointments_doctors1`
    FOREIGN KEY (`doctors_id`)
    REFERENCES `patientstack_db`.`doctors` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_doctors_has_appointments_appointments1`
    FOREIGN KEY (`appointments_physician_id` , `appointments_patients_id`)
    REFERENCES `patientstack_db`.`appointments` (`physician_id` , `patients_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `patientstack_db`.`visits_has_doctors`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `patientstack_db`.`visits_has_doctors` (
  `visits_patient_id` VARCHAR(45) NOT NULL,
  `doctors_id` INT NOT NULL,
  PRIMARY KEY (`visits_patient_id`, `doctors_id`),
  INDEX `fk_visits_has_doctors_doctors1_idx` (`doctors_id` ASC),
  INDEX `fk_visits_has_doctors_visits1_idx` (`visits_patient_id` ASC),
  CONSTRAINT `fk_visits_has_doctors_visits1`
    FOREIGN KEY (`visits_patient_id`)
    REFERENCES `patientstack_db`.`visits` (`patient_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_visits_has_doctors_doctors1`
    FOREIGN KEY (`doctors_id`)
    REFERENCES `patientstack_db`.`doctors` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SHOW TABLES;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
